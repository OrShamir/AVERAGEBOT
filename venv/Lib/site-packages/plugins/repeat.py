from rtmbot.core import Plugin,  Job
from threading import Lock
import re

class RepeatPlugin(Plugin):

    lock = Lock()
    botNumberSum = 0
    botNumberCounter = 1

    def process_message(self, data):
        with self.lock:
           #TODO: REGEX for all numbers in text ..
                #matchlist = re.findall( data['text'],'[\d+]', re.M|re.I)

           bottext =  data['text']
           try:
                botnum = int(bottext)
           except ValueError:
                botnum = 0

           if botnum != 0:
               self.botNumberSum += botnum
               self.outputs.append(
                    [data['channel'], '"{}"'.format(
                        (self.botNumberSum / self.botNumberCounter), data['channel']
                    )]
                )
               self.botNumberCounter += 1

    #TODO: Send the Average
    def register_jobs(self):
            job = myJob(60)
            self.jobs.append(job)

#TODO: myJob to get the average
class myJob(Job):

        def run(self, slack_client):
            return [["CFE61KQN4", "average"]]


